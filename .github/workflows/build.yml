name: Build Electron App

on:
  pull_request:
    types: [synchronize]  # This will trigger the workflow on new commits to the PR
  push:
    tags:
      - 'v*'  # This will trigger the workflow when a new tag starting with 'v' is pushed

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Set the GH_TOKEN globally


jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear NPM Cache
        run: |
          npm cache clean --force

      - name: Install dependencies
        run: |
          npm install

      - name: Build Linux AppImage
        run: |
          npm run build:linux

      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v4
        with:
          name: jg-desktop-linux
          path: dist/*.AppImage

      - name: List Linux dist directory
        run: ls -la dist  # List contents after building

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear NPM Cache
        run: |
          npm cache clean --force

      - name: Install dependencies
        run: |
          npm install

      - name: Build Windows Packages
        run: |
          npm run build:win

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: jg-desktop-windows
          path: dist/*.exe

      - name: List Windows dist directory
        run: dir dist  # List contents after building

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear NPM Cache
        run: |
          npm cache clean --force

      - name: Install dependencies
        run: |
          npm install

      - name: Build macOS Packages
        run: |
          npm run build:mac

      - name: Upload macOS Package
        uses: actions/upload-artifact@v4
        with:
          name: jg-desktop-macos
          path: dist/*.dmg

      - name: List macOS dist directory
        run: ls -la dist  # List contents after building
  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}  # Use the tag name
          release_name: Release ${{ github.ref }}  # Release name
          files: |
            dist/*.AppImage
            dist/*.exe
            dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Use the GitHub token for authentication
