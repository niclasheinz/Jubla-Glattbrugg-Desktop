name: Build Electron App

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow on any tag push
  pull_request:
  issue_comment:
    types: [created]  # Triggers the workflow when a new comment is created on a PR

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Set the GH_TOKEN globally

jobs:
  build:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
      github.event.issue.pull_request != null &&
      contains(github.event.comment.body, '/build'))
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear NPM Cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install

      - name: Build Electron App
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npm run build:linux
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            npm run build:win
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            npm run build:mac
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jg-desktop-${{ matrix.os }}
          path: |
            dist/*.AppImage
            dist/*.exe
            dist/*.dmg

  create-release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Linux AppImage
        uses: actions/download-artifact@v4
        with:
          name: jg-desktop-ubuntu-latest
          path: ./dist

      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: jg-desktop-windows-latest
          path: ./dist

      - name: Download macOS Package
        uses: actions/download-artifact@v4
        with:
          name: jg-desktop-macos-latest
          path: ./dist

      - name: List files in dist directory for debugging
        run: ls -la ./dist

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          TAG_NAME="${{ github.ref_name }}"
          gh release create "$TAG_NAME" \
            --title "$TAG_NAME" \
            --notes "Release for $TAG_NAME" \
            ./dist/*
